"""
Handler –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç –∏—Ö –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç.
"""

import os
from pathlib import Path
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from core.logger import get_logger, log_user_action, log_exception
from core.exceptions import TranscriptionError
from api.proxyapi_client import ProxyAPIClient
from bot.utils import send_typing_action
from bot.keyboards import get_main_keyboard

logger = get_logger(__name__)

# –°–æ–∑–¥–∞–µ–º router
voice_router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ API –∫–ª–∏–µ–Ω—Ç (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ main.py)
api_client: ProxyAPIClient = None


def setup_api_client(client: ProxyAPIClient):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª–∏–µ–Ω—Ç –¥–ª—è handler"""
    global api_client
    api_client = client


@voice_router.message(F.voice)
async def handle_voice(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    1. –°–∫–∞—á–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ
    2. –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç —á–µ—Ä–µ–∑ Whisper
    3. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    user_id = message.from_user.id
    log_user_action(logger, user_id, "–ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º typing indicator –ø–æ–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        await send_typing_action(message.bot, message.chat.id, duration=2)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        voice = message.voice
        file_id = voice.file_id
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file = await message.bot.get_file(file_id)
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        temp_dir = Path("temp")
        temp_dir.mkdir(exist_ok=True)
        
        # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        temp_file_path = temp_dir / f"voice_{user_id}_{message.message_id}.ogg"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await message.bot.download_file(file.file_path, destination=temp_file_path)
        
        logger.info(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ: {temp_file_path}")
        
        # –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ–º
        transcribed_text = await api_client.transcribe_audio(
            audio_file_path=temp_file_path,
            language="ru"
        )
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove(temp_file_path)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {e}")
        
        logger.info(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–æ | User {user_id} | –¢–µ–∫—Å—Ç: {transcribed_text[:100]}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{transcribed_text}",
            reply_markup=get_main_keyboard()
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        # Message –≤ aiogram 3.x —è–≤–ª—è–µ—Ç—Å—è frozen (–Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–º), –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º model_copy
        text_message = message.model_copy(update={"text": transcribed_text})
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        current_state = await state.get_state()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º handlers –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        from bot.handlers.conversation import (
            handle_niche,
            handle_goal,
            handle_format
        )
        from bot.states import ContentGenerationStates
        
        # –í—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π handler –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if current_state == ContentGenerationStates.COLLECTING_NICHE.state:
            await handle_niche(text_message, state)
        elif current_state == ContentGenerationStates.COLLECTING_GOAL.state:
            await handle_goal(text_message, state)
        elif current_state == ContentGenerationStates.COLLECTING_FORMAT.state:
            await handle_format(text_message, state)
        else:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
            await message.answer(
                "–°–ø–∞—Å–∏–±–æ! –ù–æ —Å–µ–π—á–∞—Å –º–Ω–µ –Ω—É–∂–µ–Ω –≤—ã–±–æ—Ä –∏–∑ –∫–Ω–æ–ø–æ–∫, –∞ –Ω–µ —Ç–µ–∫—Å—Ç üòä",
                reply_markup=get_main_keyboard()
            )
        
    except TranscriptionError as e:
        log_exception(logger, e, "–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏")
        
        await message.answer(
            "üòî –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
            "‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ –∏ –≥—Ä–æ–º—á–µ\n"
            "‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å —Ñ–æ–Ω–æ–≤—ã–π —à—É–º\n"
            "‚Ä¢ –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º",
            reply_markup=get_main_keyboard()
        )
    
    except Exception as e:
        log_exception(logger, e, "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ")
        
        await message.answer(
            "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
            reply_markup=get_main_keyboard()
        )

